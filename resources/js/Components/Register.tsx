/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/63NIP4hFYAd
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Eczar } from 'next/font/google'
import { Yeseva_One } from 'next/font/google'

eczar({
  subsets: ['latin'],
  display: 'swap',
})

yeseva_one({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { FormEventHandler, useEffect } from "react";
import { useForm } from "@inertiajs/react";


export function RegisterComponent() {
  const { data, setData, post, errors, reset } = useForm({
    name: "Alpha Romer Coma",
    email: "kobayashi69000@gmail.com",
    password: "asdljl1298asd@#&*(",
    phone: "09878",
    region: "Region III",
    city: "Metro Manila",
    municipality: "Manila",
    street: "17th Street",
    preferredCuisines: [],
  });

  useEffect(() => {
    return () => {
      reset();
    };
  }, []);

  const submit: FormEventHandler = (e) => {
    e.preventDefault();

    post(route("register"));
  };

  return (
    <form
      className="flex min-h-[100dvh] items-center justify-center bg-[#F0E9E5] px-4 py-12 sm:px-6 lg:px-8"
      onSubmit={submit}
    >
      <div className="mx-auto max-w-2xl w-full space-y-6 bg-white p-8 rounded-lg shadow-lg">
        <div className="space-y-2 text-center">
          <h1 className="text-3xl font-bold tracking-tighter text-[#A38D7E] sm:text-4xl">
            Sign up to PinoyPalate
          </h1>
          {errors.email && (
            <p className="text-red-500">{errors.email}</p>
          )}
          {
            errors.password && (
              <p className="text-red-500">{errors.password}</p>
            )
          }
          {
            errors.name && (
              <p className="text-red-500">{errors.name}</p>
            )

          }
          {
            errors.phone && (
              <p className="text-red-500">{errors.phone}</p>
            )

          }
          {
            errors.region && (
              <p className="text-red-500">{errors.region}</p>
            )

          }
          {
            errors.city && (
              <p className="text-red-500">{errors.city}</p>
            )

          }
          {
            errors.municipality && (
              <p className="text-red-500">{errors.municipality}</p>
            )

          }
          {
            errors.street && (
              <p className="text-red-500">{errors.street}</p>
            )

          }
          {
            errors.preferredCuisines && (
              <p className="text-red-500">{errors.preferredCuisines}</p>
            )

          }
          <p className="text-[#7E7E7E]">
            Enter your details to create a new account.
          </p>
        </div>
        <div className="grid grid-cols-1 gap-4 sm:grid-cols-2">
          <div className="space-y-2">
            <label
              htmlFor="name"
              className="text-sm font-medium text-[#A38D7E]"
            >
              Name
            </label>
            <input
              id="name"
              type="text"
              placeholder="John Doe"
              onChange={(e) => setData("name", e.target.value)}
              value={data.name}
              className="block w-full rounded-md border border-[#D9D1CB] bg-[#F0E9E5] px-3 py-2 text-[#7E7E7E] placeholder-[#B3B3B3] shadow-sm focus:border-[#A38D7E] focus:outline-none focus:ring-1 focus:ring-[#A38D7E] sm:text-sm"
              required
            />
          </div>
          <div className="space-y-2">
            <label
              htmlFor="email"
              className="text-sm font-medium text-[#A38D7E]"
            >
              Email
            </label>
            <input
              id="email"
              type="email"
              onChange={(e) => setData("email", e.target.value)}
              value={data.email}
              placeholder="m@example.com"
              className="block w-full rounded-md border border-[#D9D1CB] bg-[#F0E9E5] px-3 py-2 text-[#7E7E7E] placeholder-[#B3B3B3] shadow-sm focus:border-[#A38D7E] focus:outline-none focus:ring-1 focus:ring-[#A38D7E] sm:text-sm"
              required
            />
          </div>
          <div className="space-y-2">
            <label
              htmlFor="password"
              className="text-sm font-medium text-[#A38D7E]"
            >
              Password
            </label>
            <input
              id="password"
              type="password"
              placeholder="********"
              onChange={(e) =>
                setData("password", e.target.value)
              }
              value={data.password}
              className="block w-full rounded-md border border-[#D9D1CB] bg-[#F0E9E5] px-3 py-2 text-[#7E7E7E] placeholder-[#B3B3B3] shadow-sm focus:border-[#A38D7E] focus:outline-none focus:ring-1 focus:ring-[#A38D7E] sm:text-sm"
              required
            />
          </div>{" "}
          <div className="space-y-2">
            <label
              htmlFor="phone"
              className="text-sm font-medium text-[#A38D7E]"
            >
              Phone
            </label>
            <input
              id="phone"
              type="text"
              placeholder="09xxxxxxxxx"
              onChange={(e) => setData("phone", e.target.value)}
              value={data.phone}
              className="block w-full rounded-md border border-[#D9D1CB] bg-[#F0E9E5] px-3 py-2 text-[#7E7E7E] placeholder-[#B3B3B3] shadow-sm focus:border-[#A38D7E] focus:outline-none focus:ring-1 focus:ring-[#A38D7E] sm:text-sm"
              required
            />
          </div>
          <div className="space-y-2">
            <label
              htmlFor="region"
              className="text-sm font-medium text-[#A38D7E]"
            >
              Region
            </label>
            <input
              id="region"
              type="text"
              placeholder="Manila"
              onChange={(e) => setData("region", e.target.value)}
              value={data.region}
              className="block w-full rounded-md border border-[#D9D1CB] bg-[#F0E9E5] px-3 py-2 text-[#7E7E7E] placeholder-[#B3B3B3] shadow-sm focus:border-[#A38D7E] focus:outline-none focus:ring-1 focus:ring-[#A38D7E] sm:text-sm"
              required
            />
          </div>{" "}
          <div className="space-y-2">
            <label
              htmlFor="city"
              className="text-sm font-medium text-[#A38D7E]"
            >
              City
            </label>
            <input
              id="city"
              type="text"
              placeholder="Manila"
              onChange={(e) => setData("city", e.target.value)}
              value={data.city}
              className="block w-full rounded-md border border-[#D9D1CB] bg-[#F0E9E5] px-3 py-2 text-[#7E7E7E] placeholder-[#B3B3B3] shadow-sm focus:border-[#A38D7E] focus:outline-none focus:ring-1 focus:ring-[#A38D7E] sm:text-sm"
              required
            />
          </div>
          <div className="space-y-2">
            <label
              htmlFor="municipality"
              className="text-sm font-medium text-[#A38D7E]"
            >
              Municipality
            </label>
            <input
              id="municipality"
              type="text"
              placeholder="Quezon City"
              onChange={(e) =>
                setData("municipality", e.target.value)
              }
              value={data.municipality}
              className="block w-full rounded-md border border-[#D9D1CB] bg-[#F0E9E5] px-3 py-2 text-[#7E7E7E] placeholder-[#B3B3B3] shadow-sm focus:border-[#A38D7E] focus:outline-none focus:ring-1 focus:ring-[#A38D7E] sm:text-sm"
              required
            />
          </div>{" "}
          <div className="space-y-2">
            <label
              htmlFor="street"
              className="text-sm font-medium text-[#A38D7E]"
            >
              Street
            </label>
            <input
              id="street"
              type="text"
              placeholder="123 Street"
              onChange={(e) => setData("street", e.target.value)}
              value={data.street}
              className="block w-full rounded-md border border-[#D9D1CB] bg-[#F0E9E5] px-3 py-2 text-[#7E7E7E] placeholder-[#B3B3B3] shadow-sm focus:border-[#A38D7E] focus:outline-none focus:ring-1 focus:ring-[#A38D7E] sm:text-sm"
              required
            />
          </div>
        </div>
        <div className="space-y-2">
          <label className="text-sm font-medium text-[#A38D7E]">
            Preferred Cuisines
          </label>
          <div className="grid grid-cols-3 gap-2">
            <div className="flex items-center space-x-2">
              <input
                id="cuisine-savory"
                type="checkbox"
                className="h-4 w-4 rounded border-[#D9D1CB] bg-[#F0E9E5] text-[#A38D7E] focus:ring-[#A38D7E]"
              />
              <label
                htmlFor="cuisine-savory"
                className="text-[#7E7E7E]"
              >
                Savory
              </label>
            </div>
            <div className="flex items-center space-x-2">
              <input
                id="cuisine-sweet"
                type="checkbox"
                className="h-4 w-4 rounded border-[#D9D1CB] bg-[#F0E9E5] text-[#A38D7E] focus:ring-[#A38D7E]"
              />
              <label
                htmlFor="cuisine-sweet"
                className="text-[#7E7E7E]"
              >
                Sweet
              </label>
            </div>
            <div className="flex items-center space-x-2">
              <input
                id="cuisine-sour"
                type="checkbox"
                className="h-4 w-4 rounded border-[#D9D1CB] bg-[#F0E9E5] text-[#A38D7E] focus:ring-[#A38D7E]"
              />
              <label
                htmlFor="cuisine-sour"
                className="text-[#7E7E7E]"
              >
                Sour
              </label>
            </div>
            <div className="flex items-center space-x-2">
              <input
                id="cuisine-bittery"
                type="checkbox"
                className="h-4 w-4 rounded border-[#D9D1CB] bg-[#F0E9E5] text-[#A38D7E] focus:ring-[#A38D7E]"
              />
              <label
                htmlFor="cuisine-bittery"
                className="text-[#7E7E7E]"
              >
                Bittery
              </label>
            </div>
            <div className="flex items-center space-x-2">
              <input
                id="cuisine-vegan"
                type="checkbox"
                className="h-4 w-4 rounded border-[#D9D1CB] bg-[#F0E9E5] text-[#A38D7E] focus:ring-[#A38D7E]"
              />
              <label
                htmlFor="cuisine-vegan"
                className="text-[#7E7E7E]"
              >
                Vegan
              </label>
            </div>
            <div className="flex items-center space-x-2">
              <input
                id="cuisine-bread"
                type="checkbox"
                className="h-4 w-4 rounded border-[#D9D1CB] bg-[#F0E9E5] text-[#A38D7E] focus:ring-[#A38D7E]"
              />
              <label
                htmlFor="cuisine-bread"
                className="text-[#7E7E7E]"
              >
                Bread
              </label>
            </div>
          </div>
        </div>
        <div className="flex justify-end">
          <button
            type="submit"
            className="w-full rounded-md bg-[#A38D7E] px-3 py-2 text-sm font-medium text-[#F0E9E5] shadow-sm hover:bg-[#8B7667] focus:outline-none focus:ring-1 focus:ring-[#A38D7E] disabled:cursor-not-allowed disabled:opacity-50"
          >
            Sign up
          </button>
        </div>
        <div className="text-center text-sm text-[#7E7E7E]">
          Already have an account?{" "}
          <a
            href="/login"
            className="font-medium text-[#A38D7E] hover:underline"
          >
            Sign in
          </a>
        </div>
      </div>
    </form>
  );
}
